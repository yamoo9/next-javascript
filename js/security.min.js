(function(exportName) {
  "use strict";

  var exports = exports || {};

  function create(options) {
    if (typeof options === "function") {
      options = {
        onchange: options
      };
    }
    options = options || {};
    var delay = options.delay || 1000;
    var element = null;
    var instance = {};
    instance.onchange = options.onchange;

    var status = "unknown";
    var checkStatus = null;

    function getStatus() {
      return status;
    }

    instance.getStatus = getStatus;

    function checkHandler() {

      if (
        window.Firebug &&
        window.Firebug.chrome &&
        window.Firebug.chrome.isInitialized
      ) {
        setStatus("on");
        isTriggered = true;
        return;
      }

      var r = /./;
      r.toString = function() {
        checkStatus = "on";
        isTriggered = true;
        setStatus("on");
      };
      checkStatus = "off";
      console.log("%c", r, options.label || "");
      if (!options.once) {
        if (console.clear) {
          console.clear();
        }
      }
      setStatus(checkStatus);

    }

    function setStatus(value) {
      if (status !== value) {
        status = value;
        if (typeof instance.onchange === "function") {
          instance.onchange(value);
        }
      }
    }

    var timer;
    if (!options.once) {
      setInterval(checkHandler, delay);
      window.addEventListener("resize", checkHandler);
    } else {
      checkHandler();
    }

    var freed;

    function free() {
      if (freed) {
        return;
      }
      freed = true;
      if (!options.once) {
        window.removeEventListener("resize", checkHandler);
        clearInterval(timer);
      }
    }
    instance.free = free;

    return instance;
  }

  exports.create = create;

  if (typeof define === "function") {
    if (define.amd || define.cmd) {
      define(function() {
        return exports;
      });
    }
  } else if (typeof module !== "undefined" && module.exports) {
    module.exports = exports;
  } else {
    window[exportName] = exports;
  }

})("jdetects");